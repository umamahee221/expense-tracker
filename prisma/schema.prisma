datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Gender {
  Male
  Female
  Others
}

model Address {
  id      String @id @default(cuid())
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId  String @unique
  address String
  city    String
  state   String
  country String
  pin     String
}

model User {
  id          String       @id @default(cuid())
  email       String       @unique
  password    Password?
  firstName   String?
  lastName    String?
  dateOfBirth DateTime?
  gender      Gender?
  address     Address?
  phoneNumber String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  preferences Preferences?
  notes       Note[]
  expenses    Expense[]
}

model Preferences {
  id       String  @id @default(cuid())
  user     User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId   String  @unique
  darkMode Boolean
}

model Password {
  hash   String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Expense {
  id            String      @id @default(cuid())
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  category      Category    @relation(fields: [categoryId], references: [id])
  subcategory   SubCategory @relation(fields: [subCategoryId], references: [id])
  userId        String
  categoryId    String
  subCategoryId String
  note          String
  amount        Float
  timestamp     DateTime
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Category {
  id            String        @id @default(cuid())
  name          String
  color         String
  subCategories SubCategory[]
  Expense       Expense[]
}

model SubCategory {
  id         String    @id @default(cuid())
  category   Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  categoryId String
  name       String
  Expense    Expense[]
}

model Note {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String
  title     String
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
